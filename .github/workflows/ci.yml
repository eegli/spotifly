name: CI

on:
  push:
    branches: [main]
    paths-ignore: [docs/**]
  pull_request:
    branches: [main]
    paths-ignore: [docs/**]

jobs:
  # typescript:
  #   name: TypeScript
  #   runs-on: [ubuntu-latest]
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Setup Node
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version-file: '.nvmrc'
  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn cache dir)"
  #     - name: Restore yarn cache
  #       uses: actions/cache@v2
  #       id: yarn-cache
  #       with:
  #         path: |
  #           ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #           node_modules
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - name: Install Dependencies
  #       run: yarn install:ci
  #     - name: TypeScript checks
  #       run: yarn check-types

  eslint:
    name: ESLint
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn install
      - name: Lint
        run: yarn lint

  tests:
    name: Test on Node ${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: ['16', '17']
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: ${{ matrix.node }}
      - name: Install dependencies
        run: yarn install
      - name: Run tests
        run: yarn test --coverage --verbose
